{"ast":null,"code":"var _jsxFileName = \"/Users/gwonseongjun/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/r02/src/components/reply/ReplyWrapper.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ReplyList from \"./ReplyList\";\n\n/* 상태유지 */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initState = {\n  bno: 0,\n  page: 1,\n  last: true\n};\nconst ReplyWrapper = _ref => {\n  _s();\n  let {\n    bno\n  } = _ref;\n  const [data, setData] = useState(initState);\n\n  // props의 상태를 유지할떄 useEffect => bno가 바뀔때 \n  useEffect(() => {\n    data.bno = bno;\n    data.last = true;\n    data.page = 1;\n    setData({\n      ...data\n    });\n  }, [bno]);\n\n  // 페이지가 변경되었을때 처리 함수\n  const movePage = num => {\n    console.log(num);\n    data.page = num;\n    data.last = false;\n    setData({\n      ...data\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ReplyList, {\n      ...data,\n      movePage: movePage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(ReplyWrapper, \"iyX5LyjA8Nx2kch1ttMqkgd3RSI=\");\n_c = ReplyWrapper;\nexport default ReplyWrapper;\nvar _c;\n$RefreshReg$(_c, \"ReplyWrapper\");","map":{"version":3,"names":["useEffect","useState","ReplyList","jsxDEV","_jsxDEV","initState","bno","page","last","ReplyWrapper","_ref","_s","data","setData","movePage","num","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gwonseongjun/리액트 프로젝트/r02/src/components/reply/ReplyWrapper.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport ReplyList from \"./ReplyList\"\n\n/* 상태유지 */\nconst initState = {\n    bno : 0,\n    page : 1,\n    last : true\n}\n\nconst ReplyWrapper = ({bno}) => {\n    const [data, setData] = useState(initState)\n    \n    // props의 상태를 유지할떄 useEffect => bno가 바뀔때 \n    useEffect(() => {\n\n        data.bno = bno\n        data.last = true\n        data.page = 1\n        setData({...data})\n\n    },[bno])\n\n    // 페이지가 변경되었을때 처리 함수\n    const movePage = (num) => {\n\n        console.log(num)\n\n        data.page = num\n        data.last = false\n        setData({...data})\n\n\n    }\n\n    return ( \n\n        <div>\n            <ReplyList {...data} movePage={movePage}></ReplyList>\n        </div>\n\n     );\n}\n \nexport default ReplyWrapper;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,SAAS,GAAG;EACdC,GAAG,EAAG,CAAC;EACPC,IAAI,EAAG,CAAC;EACRC,IAAI,EAAG;AACX,CAAC;AAED,MAAMC,YAAY,GAAGC,IAAA,IAAW;EAAAC,EAAA;EAAA,IAAV;IAACL;EAAG,CAAC,GAAAI,IAAA;EACvB,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAACI,SAAS,CAAC;;EAE3C;EACAL,SAAS,CAAC,MAAM;IAEZY,IAAI,CAACN,GAAG,GAAGA,GAAG;IACdM,IAAI,CAACJ,IAAI,GAAG,IAAI;IAChBI,IAAI,CAACL,IAAI,GAAG,CAAC;IACbM,OAAO,CAAC;MAAC,GAAGD;IAAI,CAAC,CAAC;EAEtB,CAAC,EAAC,CAACN,GAAG,CAAC,CAAC;;EAER;EACA,MAAMQ,QAAQ,GAAIC,GAAG,IAAK;IAEtBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAEhBH,IAAI,CAACL,IAAI,GAAGQ,GAAG;IACfH,IAAI,CAACJ,IAAI,GAAG,KAAK;IACjBK,OAAO,CAAC;MAAC,GAAGD;IAAI,CAAC,CAAC;EAGtB,CAAC;EAED,oBAEIR,OAAA;IAAAc,QAAA,eACId,OAAA,CAACF,SAAS;MAAA,GAAKU,IAAI;MAAEE,QAAQ,EAAEA;IAAS;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAGd,CAAC;AAAAX,EAAA,CAhCKF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}