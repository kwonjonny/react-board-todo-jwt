{"ast":null,"code":"import axios from \"axios\";\nimport { getCookie, setCookie } from \"./cookieUtil\";\n\n// jwt 엑시오스를 사용하면 앞으로 모든 axios는 jwtAxios = axios.get 같은 jwtAxios\n// 메소드를 사용해야한다 \n\nconst jwtAxios = axios.create();\nconst beforeReq = config => {\n  console.log(\"beforeRequest.................\");\n  const {\n    accessToken\n  } = getCookie(\"login\");\n  if (!accessToken) {\n    throw new Error(\"NO ACCESS TOKEN\");\n  }\n  config.headers.Authorization = `Bearer ${accessToken}`;\n  return config;\n};\nconst requestFail = err => {\n  console.log(\"request fail..............\");\n  return Promise.reject(err);\n};\nconst beforeRes = async res => {\n  console.log(\"2xx Response.............\");\n  if (res.data.error === 'Expired') {\n    console.log(\"Access Token has expired\");\n    const newAccessToken = await refreshJWT();\n    const originalRequest = res.config;\n    originalRequest.headers.Authorization = `Bearer ${newAccessToken}`;\n    return await axios(originalRequest);\n  }\n  return res;\n};\nconst refreshJWT = async () => {\n  const cookieValue = getCookie(\"login\");\n  const {\n    accessToken,\n    refreshToken\n  } = cookieValue;\n  const header = {\n    headers: {\n      \"Authorization\": `Bearer ${accessToken}`\n    }\n  };\n  const res = await axios.get(`http://localhost:8080/api/member/refresh?refreshToken=${refreshToken}`, header);\n  const newAccess = res.data.accessToken;\n  const newRefresh = res.data.refreshToken;\n  console.log(\"--------------------------------\");\n  console.log(\"new access :\" + newAccess);\n  console.log(\"new refresh :\" + newRefresh);\n  cookieValue.accessToken = newAccess;\n  cookieValue.refreshToken = newRefresh;\n  console.log(\"--------------------------------\");\n  console.log(cookieValue);\n  setCookie(\"login\", JSON.stringify(cookieValue), 1);\n  return newAccess;\n};\nconst responseFail = err => {\n  console.log(\"response fail...........\");\n  return Promise.reject(err);\n};\njwtAxios.interceptors.request.use(beforeReq, requestFail);\njwtAxios.interceptors.response.use(beforeRes, responseFail);\nexport default jwtAxios;","map":{"version":3,"names":["axios","getCookie","setCookie","jwtAxios","create","beforeReq","config","console","log","accessToken","Error","headers","Authorization","requestFail","err","Promise","reject","beforeRes","res","data","error","newAccessToken","refreshJWT","originalRequest","cookieValue","refreshToken","header","get","newAccess","newRefresh","JSON","stringify","responseFail","interceptors","request","use","response"],"sources":["/Users/gwonseongjun/리액트 프로젝트/r02/src/util/jwtUtil.js"],"sourcesContent":["\n\nimport axios from \"axios\";\nimport { getCookie, setCookie } from \"./cookieUtil\";\n\n// jwt 엑시오스를 사용하면 앞으로 모든 axios는 jwtAxios = axios.get 같은 jwtAxios\n// 메소드를 사용해야한다 \n\nconst jwtAxios = axios.create()\n\nconst beforeReq = (config) => {\n\n    console.log(\"beforeRequest.................\")\n\n    const {accessToken}  = getCookie(\"login\")\n\n    if(!accessToken){\n        throw new Error(\"NO ACCESS TOKEN\")\n    }\n    \n    config.headers.Authorization = `Bearer ${accessToken}`\n\n    return config\n}\nconst requestFail = (err) => {\n\n    console.log(\"request fail..............\")\n\n    return Promise.reject(err)\n}\n\nconst beforeRes = async(res) => {\n\n    console.log(\"2xx Response.............\")\n\n    if(res.data.error === 'Expired'){\n\n        console.log(\"Access Token has expired\")\n        const newAccessToken = await refreshJWT()\n\n        const originalRequest = res.config\n\n        originalRequest.headers.Authorization =`Bearer ${newAccessToken}`\n\n        return await axios(originalRequest)\n    }\n\n    return res\n\n}\n\nconst refreshJWT = async () => {\n\n    const cookieValue = getCookie(\"login\")\n\n    const {accessToken, refreshToken} = cookieValue\n\n    const header = {\n        headers: {\n            \"Authorization\": `Bearer ${accessToken}`\n        }\n    }\n\n    const res = await axios.get(`http://localhost:8080/api/member/refresh?refreshToken=${refreshToken}`, header)\n\n    const newAccess = res.data.accessToken\n    const newRefresh = res.data.refreshToken\n\n    console.log(\"--------------------------------\")\n    console.log(\"new access :\" + newAccess )\n    console.log(\"new refresh :\" + newRefresh)\n\n\n    cookieValue.accessToken = newAccess\n    cookieValue.refreshToken = newRefresh\n    console.log(\"--------------------------------\")\n    console.log(cookieValue)\n\n    setCookie(\"login\", JSON.stringify(cookieValue), 1)\n\n    return newAccess\n\n}\n\n\n\nconst responseFail  = (err) => {\n    console.log(\"response fail...........\")\n\n\n    return Promise.reject(err)\n}\n\njwtAxios.interceptors.request.use(beforeReq, requestFail)\njwtAxios.interceptors.response.use(beforeRes, responseFail)\n\nexport default jwtAxios"],"mappings":"AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,SAAS,QAAQ,cAAc;;AAEnD;AACA;;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAM,CAAC,CAAC;AAE/B,MAAMC,SAAS,GAAIC,MAAM,IAAK;EAE1BC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAE7C,MAAM;IAACC;EAAW,CAAC,GAAIR,SAAS,CAAC,OAAO,CAAC;EAEzC,IAAG,CAACQ,WAAW,EAAC;IACZ,MAAM,IAAIC,KAAK,CAAC,iBAAiB,CAAC;EACtC;EAEAJ,MAAM,CAACK,OAAO,CAACC,aAAa,GAAI,UAASH,WAAY,EAAC;EAEtD,OAAOH,MAAM;AACjB,CAAC;AACD,MAAMO,WAAW,GAAIC,GAAG,IAAK;EAEzBP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAEzC,OAAOO,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AAC9B,CAAC;AAED,MAAMG,SAAS,GAAG,MAAMC,GAAG,IAAK;EAE5BX,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;EAExC,IAAGU,GAAG,CAACC,IAAI,CAACC,KAAK,KAAK,SAAS,EAAC;IAE5Bb,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,MAAMa,cAAc,GAAG,MAAMC,UAAU,CAAC,CAAC;IAEzC,MAAMC,eAAe,GAAGL,GAAG,CAACZ,MAAM;IAElCiB,eAAe,CAACZ,OAAO,CAACC,aAAa,GAAG,UAASS,cAAe,EAAC;IAEjE,OAAO,MAAMrB,KAAK,CAACuB,eAAe,CAAC;EACvC;EAEA,OAAOL,GAAG;AAEd,CAAC;AAED,MAAMI,UAAU,GAAG,MAAAA,CAAA,KAAY;EAE3B,MAAME,WAAW,GAAGvB,SAAS,CAAC,OAAO,CAAC;EAEtC,MAAM;IAACQ,WAAW;IAAEgB;EAAY,CAAC,GAAGD,WAAW;EAE/C,MAAME,MAAM,GAAG;IACXf,OAAO,EAAE;MACL,eAAe,EAAG,UAASF,WAAY;IAC3C;EACJ,CAAC;EAED,MAAMS,GAAG,GAAG,MAAMlB,KAAK,CAAC2B,GAAG,CAAE,yDAAwDF,YAAa,EAAC,EAAEC,MAAM,CAAC;EAE5G,MAAME,SAAS,GAAGV,GAAG,CAACC,IAAI,CAACV,WAAW;EACtC,MAAMoB,UAAU,GAAGX,GAAG,CAACC,IAAI,CAACM,YAAY;EAExClB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/CD,OAAO,CAACC,GAAG,CAAC,cAAc,GAAGoB,SAAU,CAAC;EACxCrB,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGqB,UAAU,CAAC;EAGzCL,WAAW,CAACf,WAAW,GAAGmB,SAAS;EACnCJ,WAAW,CAACC,YAAY,GAAGI,UAAU;EACrCtB,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EAC/CD,OAAO,CAACC,GAAG,CAACgB,WAAW,CAAC;EAExBtB,SAAS,CAAC,OAAO,EAAE4B,IAAI,CAACC,SAAS,CAACP,WAAW,CAAC,EAAE,CAAC,CAAC;EAElD,OAAOI,SAAS;AAEpB,CAAC;AAID,MAAMI,YAAY,GAAKlB,GAAG,IAAK;EAC3BP,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;EAGvC,OAAOO,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AAC9B,CAAC;AAEDX,QAAQ,CAAC8B,YAAY,CAACC,OAAO,CAACC,GAAG,CAAC9B,SAAS,EAAEQ,WAAW,CAAC;AACzDV,QAAQ,CAAC8B,YAAY,CAACG,QAAQ,CAACD,GAAG,CAAClB,SAAS,EAAEe,YAAY,CAAC;AAE3D,eAAe7B,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}