{"ast":null,"code":"var _jsxFileName = \"/Users/gwonseongjun/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/r02/src/pages/member/KakaoLoginComponent.js\";\nimport { Link } from \"react-router-dom\";\n\n// 카카오 REST API KEY \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst REST_KEY = '0c51c8934055f8e28462b6d5cc17be9a';\n\n// spring 으로 리다이렉트 \n// 우리가 지정한 리다이렉트 uri \nconst REDIRECT_URI = 'http://localhost:3000/member/kakao';\n\n// 인가코드 kakao URL\nconst kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code`;\n// const kakaoURL = `https://kauth.kakao.com/oauth/authorize`\n// client_id 쿼리스트링으로 클라이언트 아이디 추가해줘야한다 \n// redirect_uri 도 쿼리스트링으로 추가 \n\n// 카카오톡으로 로그인 시에 REDIRECT_URI 로 카카오가 인가 키를 발행해준다 \n// EX: 이런 인가 키 지만 이건 휘발성이기 대문에 시간이지나면 쓸수가없다 \n// http://localhost:3000/member/kakao?code=zfQ-7orDYSnVWzSecTnCBuHK1wE1CQ483WgUz5qIa8Q9Wxwp0P2S4XDH_OV0Wgn-OGo8-QopyNgAAAGJZojAig\n\n// Access 토큰 Outh 기법 을 또 발행해줘야 사용자가 여러가지의 웹의 동작을 쓸수잇따 \n\nconst KakaoLoginComponent = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-3xl text-black\",\n    children: /*#__PURE__*/_jsxDEV(Link, {\n      to: kakaoURL,\n      children: \"KAKAO LOGIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_c = KakaoLoginComponent;\nexport default KakaoLoginComponent;\nvar _c;\n$RefreshReg$(_c, \"KakaoLoginComponent\");","map":{"version":3,"names":["Link","jsxDEV","_jsxDEV","REST_KEY","REDIRECT_URI","kakaoURL","KakaoLoginComponent","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gwonseongjun/리액트 프로젝트/r02/src/pages/member/KakaoLoginComponent.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\n\n\n// 카카오 REST API KEY \nconst REST_KEY = '0c51c8934055f8e28462b6d5cc17be9a'\n\n// spring 으로 리다이렉트 \n// 우리가 지정한 리다이렉트 uri \nconst REDIRECT_URI = 'http://localhost:3000/member/kakao'\n\n// 인가코드 kakao URL\nconst kakaoURL = `https://kauth.kakao.com/oauth/authorize?client_id=${REST_KEY}&redirect_uri=${REDIRECT_URI}&response_type=code`\n// const kakaoURL = `https://kauth.kakao.com/oauth/authorize`\n// client_id 쿼리스트링으로 클라이언트 아이디 추가해줘야한다 \n// redirect_uri 도 쿼리스트링으로 추가 \n\n// 카카오톡으로 로그인 시에 REDIRECT_URI 로 카카오가 인가 키를 발행해준다 \n// EX: 이런 인가 키 지만 이건 휘발성이기 대문에 시간이지나면 쓸수가없다 \n// http://localhost:3000/member/kakao?code=zfQ-7orDYSnVWzSecTnCBuHK1wE1CQ483WgUz5qIa8Q9Wxwp0P2S4XDH_OV0Wgn-OGo8-QopyNgAAAGJZojAig\n\n// Access 토큰 Outh 기법 을 또 발행해줘야 사용자가 여러가지의 웹의 동작을 쓸수잇따 \n\nconst KakaoLoginComponent = () => {\n    return (\n\n        <div className=\"text-3xl text-black\">\n            <Link to={kakaoURL}>KAKAO LOGIN</Link>\n        </div>\n\n    );\n}\n\nexport default KakaoLoginComponent;"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;;AAGvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,kCAAkC;;AAEnD;AACA;AACA,MAAMC,YAAY,GAAG,oCAAoC;;AAEzD;AACA,MAAMC,QAAQ,GAAI,qDAAoDF,QAAS,iBAAgBC,YAAa,qBAAoB;AAChI;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,MAAME,mBAAmB,GAAGA,CAAA,KAAM;EAC9B,oBAEIJ,OAAA;IAAKK,SAAS,EAAC,qBAAqB;IAAAC,QAAA,eAChCN,OAAA,CAACF,IAAI;MAACS,EAAE,EAAEJ,QAAS;MAAAG,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAGd,CAAC;AAAAC,EAAA,GARKR,mBAAmB;AAUzB,eAAeA,mBAAmB;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}