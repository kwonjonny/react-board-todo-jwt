{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useSearchParams } from \"react-router-dom\";\n\n// null Check Logic \nconst checkNull = obj => {\n  const result = {};\n  for (const attr in obj) {\n    const attrName = attr;\n    const attrValue = obj[attr];\n    if (attrValue && attrValue !== 'null') {\n      result[attrName] = attrValue;\n    }\n  }\n  return result;\n};\nconst useQueryObj = () => {\n  _s();\n  // 쿼리스트링 처리를 위한 useSearchParams()\n  const [search, setSearch] = useSearchParams();\n  // 쿼리스트링 을 붙이기위한 \n  const navigate = useNavigate();\n\n  // cusotm hooks Check \n  console.log(\"useQueryObj\", useQueryObj);\n\n  // api server에서 보내준 pageResponse를 확인하기 위한 search.get()\n  const page = search.get(\"page\") || 1;\n  const size = search.get(\"size\") || 10;\n  const type = search.get(\"type\") || null;\n  const keyword = search.get(\"keyword\") || null;\n\n  // page size type keyword check \n  // checkNull\n  const queryObj = checkNull({\n    page,\n    size,\n    type,\n    keyword\n  });\n  console.log(\"page, size, type, keyword : => \", queryObj);\n};\n_s(useQueryObj, \"Hlkr+k0aTAMOjwiXPqcCR2YdVCA=\", true, function () {\n  return [useSearchParams];\n});\nexport default useQueryObj;","map":{"version":3,"names":["useSearchParams","checkNull","obj","result","attr","attrName","attrValue","useQueryObj","_s","search","setSearch","navigate","useNavigate","console","log","page","get","size","type","keyword","queryObj"],"sources":["/Users/gwonseongjun/리액트 프로젝트/r02/src/hooks/useQueryObj.js"],"sourcesContent":["import { useSearchParams } from \"react-router-dom\"\n\n// null Check Logic \nconst checkNull = (obj) => {\n\n    const result = {}\n\n    for (const attr in obj) {\n        const attrName = attr\n        const attrValue = obj[attr]\n\n        if (attrValue && attrValue !== 'null') {\n            result[attrName] = attrValue\n        }\n    }\n\n    return result\n}\n\nconst useQueryObj = () => {\n\n    // 쿼리스트링 처리를 위한 useSearchParams()\n    const [search, setSearch] = useSearchParams()\n    // 쿼리스트링 을 붙이기위한 \n    const navigate = useNavigate()\n\n    // cusotm hooks Check \n    console.log(\"useQueryObj\", useQueryObj)\n\n    // api server에서 보내준 pageResponse를 확인하기 위한 search.get()\n    const page = search.get(\"page\") || 1\n    const size = search.get(\"size\") || 10\n    const type = search.get(\"type\") || null\n    const keyword = search.get(\"keyword\") || null\n\n    // page size type keyword check \n    // checkNull\n    const queryObj = checkNull({ page, size, type, keyword })\n    console.log(\"page, size, type, keyword : => \", queryObj)\n\n\n}\n\nexport default useQueryObj"],"mappings":";AAAA,SAASA,eAAe,QAAQ,kBAAkB;;AAElD;AACA,MAAMC,SAAS,GAAIC,GAAG,IAAK;EAEvB,MAAMC,MAAM,GAAG,CAAC,CAAC;EAEjB,KAAK,MAAMC,IAAI,IAAIF,GAAG,EAAE;IACpB,MAAMG,QAAQ,GAAGD,IAAI;IACrB,MAAME,SAAS,GAAGJ,GAAG,CAACE,IAAI,CAAC;IAE3B,IAAIE,SAAS,IAAIA,SAAS,KAAK,MAAM,EAAE;MACnCH,MAAM,CAACE,QAAQ,CAAC,GAAGC,SAAS;IAChC;EACJ;EAEA,OAAOH,MAAM;AACjB,CAAC;AAED,MAAMI,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,eAAe,CAAC,CAAC;EAC7C;EACA,MAAMW,QAAQ,GAAGC,WAAW,CAAC,CAAC;;EAE9B;EACAC,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEP,WAAW,CAAC;;EAEvC;EACA,MAAMQ,IAAI,GAAGN,MAAM,CAACO,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;EACpC,MAAMC,IAAI,GAAGR,MAAM,CAACO,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE;EACrC,MAAME,IAAI,GAAGT,MAAM,CAACO,GAAG,CAAC,MAAM,CAAC,IAAI,IAAI;EACvC,MAAMG,OAAO,GAAGV,MAAM,CAACO,GAAG,CAAC,SAAS,CAAC,IAAI,IAAI;;EAE7C;EACA;EACA,MAAMI,QAAQ,GAAGnB,SAAS,CAAC;IAAEc,IAAI;IAAEE,IAAI;IAAEC,IAAI;IAAEC;EAAQ,CAAC,CAAC;EACzDN,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEM,QAAQ,CAAC;AAG5D,CAAC;AAAAZ,EAAA,CAtBKD,WAAW;EAAA,QAGeP,eAAe;AAAA;AAqB/C,eAAeO,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}