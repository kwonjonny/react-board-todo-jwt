{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n// 상태 데이터가 추가되더라도 initSate 커스첨하기위해 \nconst initState = {\n  items: [],\n  loading: false\n};\n\n// 외부에서 사용 가능하게 export\nexport const addCartThunk = createAsyncThunk('addCartThunk', async item => {\n  // 새로운 아이템 추가\n  const res = await axios.post('http://localhost:8080/api/cart/add', item);\n  return res.data();\n});\n\n// 외부에서 사용 가능하게 Export \nexport const getCartThunk = createAsyncThunk('getCartThunk', async email => {\n  if (!email) {\n    return new Promise((resolve, reject) => {\n      resolve([]);\n    });\n  }\n  const res = await axios.get(`http://localhost:8080/api/cart/${email}`);\n  return res.data;\n});\n\n// 항상 객체로 들어간다 \nconst cartSlice = createSlice({\n  name: \"cartSlice\",\n  initialState: initState,\n  extraReducers: builder => {\n    // 애션의 페이로드 실제 데이터\n    builder.addCase(addCartThunk.fulfilled, (state, action) => {\n      console.log(action.payload);\n      state.items = action.payload;\n    }).addCase(getCartThunk.fulfilled, (state, action) => {\n      console.log(\"getCartThunk fullfilled...\");\n      console.log(action.payload);\n    });\n  }\n});\nexport default cartSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initState","items","loading","addCartThunk","item","res","post","data","getCartThunk","email","Promise","resolve","reject","get","cartSlice","name","initialState","extraReducers","builder","addCase","fulfilled","state","action","console","log","payload","reducer"],"sources":["/Users/gwonseongjun/리액트 프로젝트/r02/src/reducers/cartSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n\n// 상태 데이터가 추가되더라도 initSate 커스첨하기위해 \nconst initState = {\n    items: [],\n    loading: false\n}\n\n// 외부에서 사용 가능하게 export\nexport const addCartThunk = createAsyncThunk('addCartThunk', async (item) => {\n    // 새로운 아이템 추가\n    const res = await axios.post('http://localhost:8080/api/cart/add', item)\n    return res.data();\n\n})\n\n// 외부에서 사용 가능하게 Export \nexport const getCartThunk = createAsyncThunk('getCartThunk', async (email) => {\n\n    if(!email){\n        return new Promise((resolve, reject) => {\n            resolve([])\n        })\n    }\n\n    const res = await axios.get(`http://localhost:8080/api/cart/${email}`)\n    return res.data\n})\n\n// 항상 객체로 들어간다 \nconst cartSlice = createSlice({\n\n    name: \"cartSlice\",\n    initialState: initState,\n    extraReducers: (builder) => {\n        // 애션의 페이로드 실제 데이터\n        builder.addCase(addCartThunk.fulfilled, (state, action) => {\n            console.log(action.payload);\n            state.items = action.payload;\n        })\n            .addCase(getCartThunk.fulfilled, (state, action) => {\n                console.log(\"getCartThunk fullfilled...\");\n                console.log(action.payload)\n            })\n\n    }\n\n\n})\n\nexport default cartSlice.reducer;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAGzB;AACA,MAAMC,SAAS,GAAG;EACdC,KAAK,EAAE,EAAE;EACTC,OAAO,EAAE;AACb,CAAC;;AAED;AACA,OAAO,MAAMC,YAAY,GAAGN,gBAAgB,CAAC,cAAc,EAAE,MAAOO,IAAI,IAAK;EACzE;EACA,MAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,IAAI,CAAC,oCAAoC,EAAEF,IAAI,CAAC;EACxE,OAAOC,GAAG,CAACE,IAAI,CAAC,CAAC;AAErB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,YAAY,GAAGX,gBAAgB,CAAC,cAAc,EAAE,MAAOY,KAAK,IAAK;EAE1E,IAAG,CAACA,KAAK,EAAC;IACN,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACpCD,OAAO,CAAC,EAAE,CAAC;IACf,CAAC,CAAC;EACN;EAEA,MAAMN,GAAG,GAAG,MAAMN,KAAK,CAACc,GAAG,CAAE,kCAAiCJ,KAAM,EAAC,CAAC;EACtE,OAAOJ,GAAG,CAACE,IAAI;AACnB,CAAC,CAAC;;AAEF;AACA,MAAMO,SAAS,GAAGhB,WAAW,CAAC;EAE1BiB,IAAI,EAAE,WAAW;EACjBC,YAAY,EAAEhB,SAAS;EACvBiB,aAAa,EAAGC,OAAO,IAAK;IACxB;IACAA,OAAO,CAACC,OAAO,CAAChB,YAAY,CAACiB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACvDC,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;MAC3BJ,KAAK,CAACpB,KAAK,GAAGqB,MAAM,CAACG,OAAO;IAChC,CAAC,CAAC,CACGN,OAAO,CAACX,YAAY,CAACY,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;MACzCD,OAAO,CAACC,GAAG,CAACF,MAAM,CAACG,OAAO,CAAC;IAC/B,CAAC,CAAC;EAEV;AAGJ,CAAC,CAAC;AAEF,eAAeX,SAAS,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}