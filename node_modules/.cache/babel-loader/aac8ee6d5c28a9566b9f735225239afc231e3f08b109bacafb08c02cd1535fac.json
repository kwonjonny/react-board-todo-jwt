{"ast":null,"code":"var _jsxFileName = \"/Users/gwonseongjun/\\u1105\\u1175\\u110B\\u1162\\u11A8\\u1110\\u1173 \\u1111\\u1173\\u1105\\u1169\\u110C\\u1166\\u11A8\\u1110\\u1173/r02/src/components/reply/ReplyWrapper.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport ReplyList from \"./ReplyList\";\nimport ReplyInput from \"./ReplyInput\";\nimport ReplyRead from \"./ReplyRead\";\n\n/* 상태유지 */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initState = {\n  bno: 0,\n  page: 1,\n  last: true,\n  refresh: false,\n  current: 0 // rno read 를 위함 \n};\n\nconst ReplyWrapper = _ref => {\n  _s();\n  let {\n    bno\n  } = _ref;\n  const [data, setData] = useState(initState);\n\n  // props의 상태를 유지할떄 useEffect => bno가 바뀔때 \n  useEffect(() => {\n    data.bno = bno;\n    data.last = true;\n    data.page = 1;\n    setData({\n      ...data\n    });\n  }, [bno]);\n\n  // 페이지가 변경되었을때 처리 함수\n  const movePage = num => {\n    console.log(num);\n    data.page = num;\n    data.last = false;\n    data.refresh = !data.refresh;\n    setData({\n      ...data\n    });\n  };\n  const refreshLast = () => {\n    data.last = true;\n    data.refresh = !data.refresh;\n    setData({\n      ...data\n    });\n  };\n\n  // list 에서 read 를 띄워주기위함 \n  const changeCurrent = rno => {\n    data.current = rno;\n    setData({\n      ...data\n    });\n  };\n\n  // read 를 취소하면 다시 업애주기위함 \n  const cancleRead = () => {\n    data.current = 0;\n    setData({\n      ...data\n    });\n  };\n\n  // 강제 리로딩 \n  const refreshPage = hide => {\n    data.refresh = data.refresh;\n    if (hide) {\n      data.current = 0;\n    }\n    setData({\n      ...data\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReplyInput, {\n      bno: bno,\n      refreshLast: refreshLast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), data.current !== 0 ? /*#__PURE__*/_jsxDEV(ReplyRead, {\n      rno: data.current,\n      cancelRead: cancleRead,\n      refreshPage: refreshPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 35\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(ReplyList, {\n      ...data,\n      movePage: movePage,\n      changeCurrent: changeCurrent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(ReplyWrapper, \"iyX5LyjA8Nx2kch1ttMqkgd3RSI=\");\n_c = ReplyWrapper;\nexport default ReplyWrapper;\nvar _c;\n$RefreshReg$(_c, \"ReplyWrapper\");","map":{"version":3,"names":["useEffect","useState","ReplyList","ReplyInput","ReplyRead","jsxDEV","_jsxDEV","Fragment","_Fragment","initState","bno","page","last","refresh","current","ReplyWrapper","_ref","_s","data","setData","movePage","num","console","log","refreshLast","changeCurrent","rno","cancleRead","refreshPage","hide","children","fileName","_jsxFileName","lineNumber","columnNumber","cancelRead","_c","$RefreshReg$"],"sources":["/Users/gwonseongjun/리액트 프로젝트/r02/src/components/reply/ReplyWrapper.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport ReplyList from \"./ReplyList\"\nimport ReplyInput from \"./ReplyInput\"\nimport ReplyRead from \"./ReplyRead\"\n\n/* 상태유지 */\nconst initState = {\n    bno: 0,\n    page: 1,\n    last: true,\n    refresh: false,\n    current:0   // rno read 를 위함 \n}\n\nconst ReplyWrapper = ({ bno }) => {\n    const [data, setData] = useState(initState)\n\n    // props의 상태를 유지할떄 useEffect => bno가 바뀔때 \n    useEffect(() => {\n        data.bno = bno\n        data.last = true\n        data.page = 1\n        setData({ ...data })\n    }, [bno])\n\n    // 페이지가 변경되었을때 처리 함수\n    const movePage = (num) => {\n        console.log(num)\n\n        data.page = num\n        data.last = false\n        data.refresh = !data.refresh\n        setData({ ...data })\n    }\n\n    const refreshLast = () => {\n        data.last = true;\n        data.refresh = !data.refresh\n        setData({...data})\n    }\n\n    // list 에서 read 를 띄워주기위함 \n    const changeCurrent = (rno) => {\n        data.current = rno\n        setData({...data})\n    }\n\n    // read 를 취소하면 다시 업애주기위함 \n    const cancleRead = () => {\n        data.current = 0\n        setData({...data})\n    }\n\n    // 강제 리로딩 \n    const refreshPage = (hide) => {\n        data.refresh = data.refresh;\n        if(hide ) {\n            data.current = 0\n        }\n        setData({...data})\n    }\n\n\n    return (\n\n        <div>\n            <ReplyInput bno={bno} refreshLast={refreshLast}></ReplyInput>\n\n            {/* 1일시에 read 보여준다 */}\n            {data.current !== 0 ? <ReplyRead \n            rno={data.current} \n            cancelRead={cancleRead}\n            refreshPage={refreshPage}></ReplyRead>:<></>}\n            \n            <ReplyList {...data} movePage={movePage} changeCurrent={changeCurrent}></ReplyList>\n\n        </div>\n\n    );\n}\n\nexport default ReplyWrapper;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,SAAS,GAAG;EACdC,GAAG,EAAE,CAAC;EACNC,IAAI,EAAE,CAAC;EACPC,IAAI,EAAE,IAAI;EACVC,OAAO,EAAE,KAAK;EACdC,OAAO,EAAC,CAAC,CAAG;AAChB,CAAC;;AAED,MAAMC,YAAY,GAAGC,IAAA,IAAa;EAAAC,EAAA;EAAA,IAAZ;IAAEP;EAAI,CAAC,GAAAM,IAAA;EACzB,MAAM,CAACE,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAACQ,SAAS,CAAC;;EAE3C;EACAT,SAAS,CAAC,MAAM;IACZkB,IAAI,CAACR,GAAG,GAAGA,GAAG;IACdQ,IAAI,CAACN,IAAI,GAAG,IAAI;IAChBM,IAAI,CAACP,IAAI,GAAG,CAAC;IACbQ,OAAO,CAAC;MAAE,GAAGD;IAAK,CAAC,CAAC;EACxB,CAAC,EAAE,CAACR,GAAG,CAAC,CAAC;;EAET;EACA,MAAMU,QAAQ,GAAIC,GAAG,IAAK;IACtBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAEhBH,IAAI,CAACP,IAAI,GAAGU,GAAG;IACfH,IAAI,CAACN,IAAI,GAAG,KAAK;IACjBM,IAAI,CAACL,OAAO,GAAG,CAACK,IAAI,CAACL,OAAO;IAC5BM,OAAO,CAAC;MAAE,GAAGD;IAAK,CAAC,CAAC;EACxB,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACtBN,IAAI,CAACN,IAAI,GAAG,IAAI;IAChBM,IAAI,CAACL,OAAO,GAAG,CAACK,IAAI,CAACL,OAAO;IAC5BM,OAAO,CAAC;MAAC,GAAGD;IAAI,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMO,aAAa,GAAIC,GAAG,IAAK;IAC3BR,IAAI,CAACJ,OAAO,GAAGY,GAAG;IAClBP,OAAO,CAAC;MAAC,GAAGD;IAAI,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMS,UAAU,GAAGA,CAAA,KAAM;IACrBT,IAAI,CAACJ,OAAO,GAAG,CAAC;IAChBK,OAAO,CAAC;MAAC,GAAGD;IAAI,CAAC,CAAC;EACtB,CAAC;;EAED;EACA,MAAMU,WAAW,GAAIC,IAAI,IAAK;IAC1BX,IAAI,CAACL,OAAO,GAAGK,IAAI,CAACL,OAAO;IAC3B,IAAGgB,IAAI,EAAG;MACNX,IAAI,CAACJ,OAAO,GAAG,CAAC;IACpB;IACAK,OAAO,CAAC;MAAC,GAAGD;IAAI,CAAC,CAAC;EACtB,CAAC;EAGD,oBAEIZ,OAAA;IAAAwB,QAAA,gBACIxB,OAAA,CAACH,UAAU;MAACO,GAAG,EAAEA,GAAI;MAACc,WAAW,EAAEA;IAAY;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,EAG5DhB,IAAI,CAACJ,OAAO,KAAK,CAAC,gBAAGR,OAAA,CAACF,SAAS;MAChCsB,GAAG,EAAER,IAAI,CAACJ,OAAQ;MAClBqB,UAAU,EAAER,UAAW;MACvBC,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,gBAAC5B,OAAA,CAAAE,SAAA,mBAAI,CAAC,eAE5CF,OAAA,CAACJ,SAAS;MAAA,GAAKgB,IAAI;MAAEE,QAAQ,EAAEA,QAAS;MAACK,aAAa,EAAEA;IAAc;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAElF,CAAC;AAGd,CAAC;AAAAjB,EAAA,CAjEKF,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AAmElB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}