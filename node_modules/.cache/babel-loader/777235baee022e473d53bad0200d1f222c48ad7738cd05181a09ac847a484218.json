{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\nconst loadCookie = () => {\n  const loginObj = getCookie(\"login\");\n  console.log(\"loginObj: \", loginObj);\n  if (!loginObj) {\n    return initState;\n  }\n  return loginObj;\n};\nconst initState = {\n  email: '',\n  signed: false\n};\nconst loginSlice = createSlice({\n  name: 'loginSlice',\n  initialState: loadCookie(),\n  reducers: {\n    requestLogin: (state, param) => {\n      const payload = param.payload;\n      console.log(\"loginSlice requestLogin: \", payload);\n\n      // 다음으로 유지해야하는 함수를 반한 pure function\n      const loginObj = {\n        email: payload.email,\n        signed: true\n      };\n      setCookie(\"login\", JSON.stringify(loginObj), 1);\n      return loginObj;\n    }\n  }\n});\n\n// 다른곳에서 쓰기위해 객체로 loginSlice.actions로 정의 \nexport const {\n  requestLogin\n} = loginSlice.actions;\n\n// 외부에 노출은 reducer로 노출시킨다 \nexport default loginSlice.reducer;","map":{"version":3,"names":["createSlice","getCookie","setCookie","loadCookie","loginObj","console","log","initState","email","signed","loginSlice","name","initialState","reducers","requestLogin","state","param","payload","JSON","stringify","actions","reducer"],"sources":["/Users/gwonseongjun/리액트 프로젝트/r02/src/reducers/loginSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getCookie, setCookie } from \"../util/cookieUtil\";\n\nconst loadCookie = () => {\n    const loginObj = getCookie(\"login\")\n\n    console.log(\"loginObj: \", loginObj)\n    if(!loginObj) {\n        return initState;\n    }\n    return loginObj;\n}\n\nconst initState = {\n    email: '',\n    signed: false\n}\n\nconst loginSlice = createSlice({\n\n    name:'loginSlice',\n    initialState: loadCookie(),\n    reducers: {\n        requestLogin: (state, param) => {\n            const payload = param.payload\n            console.log(\"loginSlice requestLogin: \", payload)\n\n            // 다음으로 유지해야하는 함수를 반한 pure function\n            const loginObj =  {email: payload.email, signed:true}\n\n            setCookie(\"login\", JSON.stringify(loginObj), 1)\n\n            return loginObj;\n        }\n    }\n    \n\n})\n\n// 다른곳에서 쓰기위해 객체로 loginSlice.actions로 정의 \nexport const { requestLogin } = loginSlice.actions\n\n// 외부에 노출은 reducer로 노출시킨다 \nexport default loginSlice.reducer\n\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,SAAS,EAAEC,SAAS,QAAQ,oBAAoB;AAEzD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EACrB,MAAMC,QAAQ,GAAGH,SAAS,CAAC,OAAO,CAAC;EAEnCI,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,QAAQ,CAAC;EACnC,IAAG,CAACA,QAAQ,EAAE;IACV,OAAOG,SAAS;EACpB;EACA,OAAOH,QAAQ;AACnB,CAAC;AAED,MAAMG,SAAS,GAAG;EACdC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACZ,CAAC;AAED,MAAMC,UAAU,GAAGV,WAAW,CAAC;EAE3BW,IAAI,EAAC,YAAY;EACjBC,YAAY,EAAET,UAAU,CAAC,CAAC;EAC1BU,QAAQ,EAAE;IACNC,YAAY,EAAEA,CAACC,KAAK,EAAEC,KAAK,KAAK;MAC5B,MAAMC,OAAO,GAAGD,KAAK,CAACC,OAAO;MAC7BZ,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEW,OAAO,CAAC;;MAEjD;MACA,MAAMb,QAAQ,GAAI;QAACI,KAAK,EAAES,OAAO,CAACT,KAAK;QAAEC,MAAM,EAAC;MAAI,CAAC;MAErDP,SAAS,CAAC,OAAO,EAAEgB,IAAI,CAACC,SAAS,CAACf,QAAQ,CAAC,EAAE,CAAC,CAAC;MAE/C,OAAOA,QAAQ;IACnB;EACJ;AAGJ,CAAC,CAAC;;AAEF;AACA,OAAO,MAAM;EAAEU;AAAa,CAAC,GAAGJ,UAAU,CAACU,OAAO;;AAElD;AACA,eAAeV,UAAU,CAACW,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}